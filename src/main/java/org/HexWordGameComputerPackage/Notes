Make a list of strings from the JSONNames files
Get an index from that list using Random
    List<String> words = new ArrayList<>();
                BufferedReader reader = new BufferedReader(new FileReader("files/words.txt"));
                String line = reader.readLine();
                while (line != null) {
                    words.add(line);
                    line = reader.readLine();
                }
                reader.close();

                // Choose a random word from the list
                int index = rand.nextInt(words.size());


Then access the JSON data using this ("data/***.json"):

4. Read JSON from a File
To read JSON from file, we will use the JSON file we created in the previous example.

First of all, we will create JSONParser instance to parse JSON file.
Use FileReader to read JSON file and pass it to parser.
Start reading the JSON objects one by one, based on their type i.e. JSONArray and JSONObject.
Read JSON Example
package com.howtodoinjava.demo.jsonsimple;

import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class ReadJSONExample
{
    @SuppressWarnings("unchecked")
    public static void main(String[] args)
    {
        //JSON parser object to parse read file
        JSONParser jsonParser = new JSONParser();

        try (FileReader reader = new FileReader("employees.json")) <--
        {
            //Read JSON file
            Object obj = jsonParser.parse(reader);

            JSONArray employeeList = (JSONArray) obj;
            System.out.println(employeeList);

            //Iterate over employee array
            employeeList.forEach( emp -> parseEmployeeObject( (JSONObject) emp ) );

        } catch (FileNotFoundException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (ParseException e) {
            e.printStackTrace();
        }
    }

    private static void parseEmployeeObject(JSONObject employee)
    {
        //Get employee object within list
        JSONObject employeeObject = (JSONObject) employee.get("employee");

        //Get employee first name
        String firstName = (String) employeeObject.get("firstName");
        System.out.println(firstName);

        //Get employee last name
        String lastName = (String) employeeObject.get("lastName");
        System.out.println(lastName);

        //Get employee website name
        String website = (String) employeeObject.get("website");
        System.out.println(website);
    }
}

Program Output.

Output
[
{"employee":{"firstName":"Lokesh", "lastName":"Gupta", "website":"howtodoinjava.com"}},
{"employee":{"firstName":"Brian", "lastName":"Schultz", "website":"example.com"}}
]

Lokesh
Gupta
howtodoinjava.com

Brian
Schultz
example.com

MAKE SURE THERE IS A PANAGRAM CAUSE PANAGRAMS ARE FUN

Implement all the features
-progress bar (point system and status at each level)
        Beginner 0% of the grand Queen Bee total
        Good Start 2%
        Moving Up 5%
        Good 8%
        Solid 15%
        Nice 25%
        Great 40%
        Amazing 50%
        Genius 70%
        Queen Bee 100%
-side bar of the words and the first two letters (NO for noise)
    -letters turn green and rest of word is added when solved

